{"version":3,"sources":["components/ContactList.module.css","components/Filter.module.css","redux/actions.js","components/ContactForm.js","redux/contacts-selectors.js","components/ContactList.js","components/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","useState","setName","setNumber","dispatch","useDispatch","className","styles","form","onSubmit","event","preventDefault","label","input","type","value","autoComplete","onChange","target","pattern","title","required","button","getFilter","state","contacts","filter","getVisibleContacts","allContacts","items","getContacts","normalizedFilter","toLowerCase","contact","includes","ContactList","useSelector","list","map","item","onClick","onDeleteContact","Filter","App","Component","createReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3d25a7b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2z69M\",\"item\":\"ContactList_item__1Dt1A\",\"button\":\"ContactList_button__XgDPf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__fyRfu\",\"label\":\"Filter_label__172_H\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from \"shortid\";\r\n\r\nconst addContact = createAction(\"contacts/add\", (name, number) => {\r\n    return {\r\n        payload: {\r\n            id: shortid.generate(),\r\n            name,\r\n            number,\r\n        }\r\n    };\r\n});\r\n\r\nconst deleteContact = createAction(\"contacts/delete\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport { addContact, deleteContact, changeFilter };","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styles from './ContactForm.module.css'\r\nimport {addContact} from \"../redux/actions\";\r\n\r\n\r\nexport default function ContactForm (){\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n   const handleNameChange = event => {\r\n       setName(event.target.value)\r\n  };\r\n  \r\n   const handleNumberChange = event => {\r\n       setNumber(event.target.value)\r\n    };\r\n    \r\n const handleSubmit = event => {\r\n    event.preventDefault();\r\n    dispatch(addContact( name, number ));\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n    \r\n  \r\n  return (\r\n            <form className={styles.form} onSubmit={handleSubmit}>\r\n        <label className={styles.label}>\r\n                    Name\r\n         <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                autoComplete=\"off\"\r\n                onChange={handleNameChange}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n/>\r\n                </label>\r\n                 <label className={styles.label}>\r\n                    Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            autoComplete=\"off\"\r\n            onChange={handleNumberChange}\r\n          />\r\n        </label>\r\n\r\n        <button  className={styles.button} type=\"submit\">Add contact</button>\r\n      </form>\r\n        )\r\n    }\r\n\r\n","export const getContacts=state=>state.contacts.items;\r\n\r\nexport const getFilter=state=>state.contacts.filter;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n    const allContacts = getContacts(state);\r\n    const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter\r\n        (contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n}","import React from \"react\";\r\nimport styles from './ContactList.module.css';\r\nimport { deleteContact } from \"../redux/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {getVisibleContacts} from \"../redux/contacts-selectors\";\r\n\r\n\r\nexport default function ContactList  () {\r\n    const contacts = useSelector(getVisibleContacts);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onDeleteContact = id => dispatch(deleteContact(id));\r\n    \r\n    return (\r\n        <ul className={styles.list}>\r\n        {\r\n            contacts.map(({ id, name, number }) => (\r\n                <li\r\n                    className={styles.item}\r\n                    key={id}\r\n                >{name}: {number}\r\n                <button className={styles.button} type=\"button\" onClick={()=>onDeleteContact(id)}>Delete</button>\r\n                </li>\r\n            ))\r\n        }\r\n    </ul>\r\n    )\r\n    \r\n}\r\n\r\n","import React from \"react\";\r\nimport styles from './Filter.module.css';\r\nimport { changeFilter } from \"../redux/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {getFilter} from \"../redux/contacts-selectors\"\r\n\r\n\r\n\r\n\r\nexport default function Filter  () {\r\n  const value = useSelector(getFilter);\r\n\r\n  const dispatch = useDispatch();\r\n  const onFilterContact = (event) => dispatch(changeFilter(event.target.value));\r\n  \r\n  return (  <label className={styles.label}>\r\n          Find contacts by Name\r\n          <input className={styles.input}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onFilterContact}\r\n          />\r\n    </label>)\r\n}\r\n\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\"\nimport ContactList from \"./components/ContactList\"\nimport Filter from \"./components/Filter\";\n\n\nclass App extends Component {\nrender() {\n   return (\n    <div>\n  <h1>Phonebook</h1>\n        <ContactForm/>\n  <h2>Contacts</h2>\n        <Filter/>\n        <ContactList />\n</div>\n  )\n}\n\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, changeFilter, deleteContact } from \"./actions\";\r\n\r\nconst items= createReducer( [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n], {\r\n    [addContact]: (state, {payload}) => [...state, payload],\r\n    [deleteContact]: (state, {payload})=>state.filter(contact=>contact.id !== payload)\r\n    })\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n})","import {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER, } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage' \r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from \"./reducers\";\r\n\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    })\r\n})\r\n\r\n  let persistor = persistStore(store)\r\n\r\nexport  {store, persistor};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport 'modern-normalize/modern-normalize.css';\nimport './style.css';\nimport { Provider } from 'react-redux';\nimport {store, persistor} from \"./redux/store\";\nimport { PersistGate } from 'redux-persist/integration/react'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<h1>Loading...</h1>} persistor={persistor}>\n        <App />\n        </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__3z7X9\",\"form\":\"ContactForm_form__yPs7t\",\"input\":\"ContactForm_input__1a3oq\",\"button\":\"ContactForm_button__1OmLY\"};"],"sourceRoot":""}